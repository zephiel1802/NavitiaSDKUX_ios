//
// IndividualRating.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class IndividualRating: JSONEncodable, Mappable, Codable {

    public var count: Int32?
    public var scaleMin: Float?
    public var scaleMax: Float?
    public var value: Float?

    public init() {}
    required public init?(map: Map) {

    }


    enum CodingKeys: String, CodingKey {
        case count = "count"
        case scaleMin = "scale_min"
        case scaleMax = "scale_max"
        case value = "value"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(count, forKey: .count)
        try container.encode(scaleMin, forKey: .scaleMin)
        try container.encode(scaleMax, forKey: .scaleMax)
        try container.encode(value, forKey: .value)
    }

    public func mapping(map: Map) {
        count <- map["count"]
        scaleMin <- map["scale_min"]
        scaleMax <- map["scale_max"]
        value <- map["value"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["count"] = self.count?.encodeToJSON()
        nillableDictionary["scale_min"] = self.scaleMin
        nillableDictionary["scale_max"] = self.scaleMax
        nillableDictionary["value"] = self.value

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
