//
// LineGroup.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class LineGroup: JSONEncodable, Mappable, Codable {

    /** Name of the object */
    public var name: String?
    public var lines: [Line]?
    public var mainLine: Line?
    public var comments: [Comment]?
    /** Identifier of the object */
    public var id: String?


    public init() {}
    required public init?(map: Map) {

    }


    enum CodingKeys: String, CodingKey {
        case name = "name"
        case lines = "lines"
        case mainLine = "main_line"
        case comments = "comments"
        case id = "id"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(lines, forKey: .lines)
        try container.encode(mainLine, forKey: .mainLine)
        try container.encode(comments, forKey: .comments)
        try container.encode(id, forKey: .id)
    }

    public func mapping(map: Map) {
        name <- map["name"]
        lines <- map["lines"]
        mainLine <- map["main_line"]
        comments <- map["comments"]
        id <- map["id"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["name"] = self.name
        nillableDictionary["lines"] = self.lines?.encodeToJSON()
        nillableDictionary["main_line"] = self.mainLine?.encodeToJSON()
        nillableDictionary["comments"] = self.comments?.encodeToJSON()
        nillableDictionary["id"] = self.id

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
