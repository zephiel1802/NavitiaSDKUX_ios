//
// LinesSchema.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class LinesSchema: JSONEncodable, Mappable, Codable {

/** Coding keys for Codable protocol */
    enum CodingKeys: CodingKey {
        case duration, cellLon, unknown
    }

    public var duration: [Int32]?
    public var cellLon: CellLonSchema?

    
    required public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        duration = try container.decode([Int32].self, forKey: .duration)
        cellLon = try container.decode(CellLonSchema.self, forKey: .cellLon)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(duration, forKey: .duration)
        try container.encode(cellLon, forKey: .cellLon)
    }

    public init() {}
    required public init?(map: Map) {

    }


    public func mapping(map: Map) {
        duration <- map["duration"]
        cellLon <- map["cell_lon"]
    }

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["duration"] = self.duration?.encodeToJSON()
        nillableDictionary["cell_lon"] = self.cellLon?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
